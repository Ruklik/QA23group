{
	"info": {
		"_postman_id": "4fc2a386-1932-4080-a919-2c75748e3f06",
		"name": "HW3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp = pm.response.json();\r",
							"pm.environment.set(\"token\", resp.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "mylogin",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123123",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}login",
					"host": [
						"{{url}}login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var resp = pm.response.json();\r",
							"var req = request.data;\r",
							"var sal = JSON.parse(req).salary;\r",
							"var schem = {\r",
							"\"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"person\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"u_age\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"u_name\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"u_salary_1_5_year\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"u_age\",\r",
							"        \"u_name\",\r",
							"        \"u_salary_1_5_year\"\r",
							"      ]\r",
							"    },\r",
							"    \"qa_salary_after_12_months\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"qa_salary_after_6_months\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"start_qa_salary\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  }\r",
							"};\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"pm.expect(tv4.validate(resp,schem)).to.be.true\r",
							"});\r",
							"\r",
							"\r",
							"pm.test('start_qa_salary = salary', function () {\r",
							"pm.expect(resp.start_qa_salary).to.eql(sal)\r",
							"});\r",
							"\r",
							"pm.test('U_salary_1_5_year = salary*4', function () {\r",
							"pm.expect(resp.person.u_salary_1_5_year).to.eql(sal*4)\r",
							"});\r",
							"\r",
							"pm.test('qa_salary_after_6_months = salary*2', function () {\r",
							"pm.expect(resp.qa_salary_after_6_months).to.eql(sal*2)\r",
							"});\r",
							"\r",
							"pm.test('qa_salary_after_12_months = salary*2.9', function () {\r",
							"pm.expect(resp.qa_salary_after_12_months).to.eql(sal*2.9)\r",
							"});\r",
							"\r",
							"pm.environment.set(\"u_salary_1_5_year\",resp.person.u_salary_1_5_year);\r",
							"\r",
							"\r",
							"var info = {\r",
							"    url: 'http://162.55.220.72:5005/get_test_user',\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"       \"Content-Type\":\"application/json\",\r",
							"   },\r",
							"    body: {\r",
							"     mode: 'formdata',\r",
							"        formdata: [\r",
							"            {key:\"auth_token\", value: pm.environment.get(\"token\"),disabled:false},\r",
							"            {key:\"salary\", value: pm.environment.get(\"u_salary_1_5_year\"),disabled:false},\r",
							"            {key:\"age\", value: pm.environment.get(\"age\"),disabled:false},\r",
							"            {key:\"name\", value: pm.environment.get(\"name\"),disabled:false},\r",
							"       ]\r",
							"    }}\r",
							"\r",
							" pm.sendRequest(info,function (err, response) {\r",
							"  console.log(\"==RESPONSE==\",response.json()) \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"auth_token\":\"{{token}}\",\r\n    \"age\":29,\r\n    \"salary\":1000,\r\n    \"name\":\"Nastya\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}user_info",
					"host": [
						"{{url}}user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"}); \r",
							"\r",
							"var resp = pm.response.json();\r",
							"var req = request.data;\r",
							"\r",
							"var schem = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"salary\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      ]\r",
							"    },\r",
							"    \"required\": [\r",
							"    \"age\",\r",
							"    \"name\",\r",
							"    \"salary\"\r",
							"  ]\r",
							"  }\r",
							"}\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"pm.expect(tv4.validate(resp,schem)).to.be.true\r",
							"});\r",
							"\r",
							"pm.test('Salary2 = salary*2', function () {\r",
							"pm.expect(+resp.salary[1]).to.eql(resp.salary[0]*2)\r",
							"});\r",
							"\r",
							"pm.test('Salary3 = salary*3', function () {\r",
							"pm.expect(+resp.salary[2]).to.eql(resp.salary[0]*3)\r",
							"});\r",
							"\r",
							"var sal2 = resp.salary[2];\r",
							"var sal1 = resp.salary[1];\r",
							"var sal0 = resp.salary[0];\r",
							"\r",
							"pm.test(\"Salary2 > salary0,1\", function () {\r",
							"    pm.expect((sal0)<(sal2)).to.be.true;\r",
							"    pm.expect((sal1)<(sal2)).to.be.true;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}new_data",
					"host": [
						"{{url}}new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var resp = pm.response.json();\r",
							"var schem = {\r",
							"    \"type\":\"object\",\r",
							"    \"properties\":{\r",
							"        \"age\":{\"type\":\"integer\"},\r",
							"        \"daily_food\":{\"type\":\"number\"},\r",
							"        \"daily_sleep\":{\"type\":\"number\"},\r",
							"        \"name\":{\"type\":\"string\"}\r",
							"    },\r",
							"  \"required\": [\r",
							"    \"age\",\r",
							"    \"daily_food\",\r",
							"    \"daily_sleep\",\r",
							"    \"name\"\r",
							"  ]\r",
							"    };\r",
							"    pm.test(\"Schema is Valid\", function(){\r",
							"        pm.expect(tv4.validate(resp,schem)).to.be.true\r",
							"    }\r",
							"    );\r",
							"    \r",
							"    var wei = request.data.weight;\r",
							"    \r",
							"    pm.test(\"Daily_food = weight*0.012\", function(){\r",
							"        pm.expect(resp.daily_food).to.eql(wei*0.012)\r",
							"    }\r",
							"    );\r",
							"\r",
							"     pm.test(\"Daily_sleep = weight*2.5\", function(){\r",
							"        pm.expect(resp.daily_sleep).to.eql(wei*2.5)\r",
							"    }\r",
							"    ); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "7",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "7",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Fibi",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}test_pet_info",
					"host": [
						"{{url}}test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var resp = pm.response.json();\r",
							"var schem = {\r",
							"    \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"family\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"children\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": [\r",
							"                {\r",
							"                  \"type\": \"string\"\r",
							"                },\r",
							"                {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": [\r",
							"                {\r",
							"                  \"type\": \"string\"\r",
							"                },\r",
							"                {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"u_salary_1_5_year\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"children\",\r",
							"        \"u_salary_1_5_year\"\r",
							"      ]\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"salary\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  }};\r",
							"  pm.test(\"Schema is Valid\",function(){\r",
							"      pm.expect(tv4.validate(resp,schem)).to.be.true\r",
							"  }\r",
							"  );\r",
							"\r",
							"//console.log(environment.name);\r",
							"\r",
							"pm.test(\"Name = name from environment\", function () {\r",
							"    pm.expect(request.data.name).to.eql(environment.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Age resp = age req\", function () {\r",
							"    pm.expect(resp.age).to.eql(request.data.age);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}get_test_user",
					"host": [
						"{{url}}get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp = pm.response.json();\r",
							"let itemLength = resp.length;\r",
							"\r",
							"//вывести кол-во данных \r",
							"console.log(\"======\",itemLength);\r",
							"function getrandomInt(itemLength){\r",
							"    return Math.floor(Math.random() *itemLength)\r",
							"\r",
							"};\r",
							"let rand = getrandomInt(itemLength);\r",
							"console.log(rand);\r",
							"//console.log(resp[rand]);\r",
							"let resp_rand = resp[rand];\r",
							"//console.log(resp_rand);\r",
							"pm.environment.set(\"IDcur\",resp_rand.Cur_ID);\r",
							"\r",
							"\r",
							"//***\r",
							"//получить список валют\r",
							"\r",
							"//let ids = []; \r",
							"//for (let a of resp){\r",
							"   // console.log(a.Cur_ID);\r",
							"    //let info = {\r",
							"        //url:'http://162.55.220.72:5005/curr_byn',\r",
							"        //method:'POST',\r",
							"        //header: {'Content-Type':\"application/json\",\r",
							"        //\"Content-Type\":\"application/x-www-form-data\"},\r",
							"        //body:{ mode:\"formdata\",\r",
							"          //     formdata:[\r",
							"            //{key:\"auth_token\", value: pm.environment.get(\"token\"),disabled:false},\r",
							"            //{key:\"curr_code\", value: a.Cur_ID, disablet:false}\r",
							"        //]\r",
							"        //}\r",
							"    //}\r",
							"//};\r",
							"//pm.sendRequest(info, function(err,response){\r",
							"    //console.log(response.json());\r",
							"//if((response.json()).status!=200){\r",
							"  //  ids.push(a.Cur_ID);\r",
							"   // console.log(ids)\r",
							"//});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}currency",
					"host": [
						"{{url}}currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let resp = pm.response.json();\r",
							"let schem = {\r",
							"    \"type\":\"object\",\r",
							"    \"properties\":{\r",
							"        \"Cur_Abbreviation\":{\"type\":\"string\"},\r",
							"        \"Cur_ID\":{\"type\":\"integer\"},\r",
							"        \"Cur_Name\":{\"type\":\"string\"},\r",
							"        \"Cur_OfficialRate\":{\"type\":\"number\"},\r",
							"        \"Cur_Scale\":{\"type\":\"integer\"},\r",
							"        \"Date\":{\"type\":\"string\"}\r",
							"    },\r",
							"    \"required\": [\r",
							"    \"Cur_Abbreviation\",\r",
							"    \"Cur_ID\",\r",
							"    \"Cur_Name\",\r",
							"    \"Cur_OfficialRate\",\r",
							"    \"Cur_Scale\",\r",
							"    \"Date\"\r",
							"  ]\r",
							"}\r",
							" pm.test(\"Schema is Valid\",function(){\r",
							"      pm.expect(tv4.validate(resp,schem)).to.be.true\r",
							"  }\r",
							"  );"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "{{IDcur}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}curr_byn",
					"host": [
						"{{url}}curr_byn"
					]
				}
			},
			"response": []
		}
	]
}